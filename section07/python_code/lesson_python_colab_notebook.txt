# -*- coding: utf-8 -*-
"""lesson_python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1umBQAdssghZQD8C6JXa0ZHKK7rQunx8T
"""

2+5

print('Hello World!')

print("Hello World.")

adjective = input("Please enter an adjective: ")
noun = input("Please enter a noun: ")
verb = input("Please enter a verb ending in -ed: ")
print("Your MadLib:")
print("The", adjective, noun, verb, "over the lazy brown dog.")

import this

import math

5 * math.pi

216546458**32164

help(print)

print('Hello ' + 'world.')

a = 5
b = 8
sum = a+b
print('{} is of type {}.'.format(sum,type(sum)))

a = 5.4
b = 8
sum = a+b
print('{} is of type {}.'.format(sum,type(sum)))

a = 'crazy '
b = 'dog.'
sum = a+b
print('{} is of type {}.'.format(sum,type(sum)))

[ x for x in range(8) ]

brother = 'roberto'
firstletter = brother[0]
print('First leter of ', brother, ' is ', firstletter)

len(brother)

brother[0::2]

listnum = [1, 2, 3, 4, 5]
newlist = [2*x for x in listnum]
newlist

import numpy as np

a = np.ones(5)
newlist = a * 2
newlist

newlist.size

for n in range(2, 10):
    for x in range(2, n):
        if n % x == 0:
            print(n, 'equals', x, '*', n//x)
            break
    else:
        # loop fell through without finding a factor
        print(n, 'is a prime number')

for num in range(2, 10):
    if num % 2 == 0:
        print("Found an even number", num)
        continue
    print("Found an odd a number", num)

# Fibonacci series:
# the sum of two elements defines the next
list = []
a, b = 0, 1
while a < 20:
    #print(a)
    list.append(a)
    b, a = a+b, b
list

def ask_ok(prompt, retries=4, reminder='Please try again!'):
    while True:
        ok = input(prompt)
        if ok in ('y', 'ye', 'yes'):
            return True
        if ok in ('n', 'no', 'nop', 'nope'):
            return False
        retries = retries - 1
        if retries <= 0:
            raise ValueError('invalid user response')
        print(reminder)
ask_ok("Do you wanna eat?")

ask_ok('lets go?')

while True:
   try:
       x = int(input("Please enter a number: "))
       break
   except ValueError:
       print("Oops!  That was no valid number.  Try again...")

class MyClass:
   """A simple example class"""
   students = None

   def __init__(self):
       self.students = ['John', 'Mary']

   def add_student(self, name):
       self.students.append(name)  

   def print_students(self):
       for student in self.students:
         print(student)

   def number_of_students(self):
       return len(self.students)
   
   #def __del__

    #def method_test():
    #  print(students)

testclass = MyClass()
print(testclass.number_of_students())
testclass.add_student('Rose')
print(testclass.number_of_students())
testclass.print_students()
del(testclass)

